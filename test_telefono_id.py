#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üß™ TESTER DE IDENTIFICACI√ìN POR TEL√âFONO
Verifica que Nora identifique correctamente usuarios por n√∫mero de WhatsApp
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from clientes.aura.handlers.process_message import identificar_tipo_contacto
from clientes.aura.auth.google_login import buscar_usuario_por_telefono

def test_identificacion_por_telefono():
    """Test 1: Verificar identificaci√≥n por tel√©fono"""
    print("=" * 60)
    print("üß™ TEST 1: Identificaci√≥n por Tel√©fono")
    print("=" * 60)
    
    # Probar con el n√∫mero de David Alcantara
    telefono_david = "5216621327315"
    nombre_nora = "aura"
    
    print(f"üîç Buscando contacto por tel√©fono: {telefono_david}")
    resultado = identificar_tipo_contacto(telefono_david, nombre_nora)
    
    print(f"‚úÖ Resultado de identificaci√≥n:")
    print(f"   üìã Tipo: {resultado.get('tipo', 'No definido')}")
    print(f"   üë§ Nombre: {resultado.get('nombre', 'Sin nombre')}")
    print(f"   üìß Email: {resultado.get('email', 'Sin email')}")
    print(f"   üìû Tel√©fono: {resultado.get('telefono', 'Sin tel√©fono')}")
    print(f"   üè∑Ô∏è Rol: {resultado.get('rol', 'Sin rol')}")
    print(f"   üîë Es supervisor: {resultado.get('es_supervisor', False)}")
    
    if resultado['tipo'] == 'usuario_cliente':
        print("‚úÖ David fue identificado como USUARIO INTERNO")
        return True
    else:
        print(f"‚ùå David no fue identificado como usuario interno: {resultado['tipo']}")
        return False

def test_busqueda_directa():
    """Test 2: B√∫squeda directa en usuarios_clientes"""
    print("\n" + "=" * 60)
    print("üß™ TEST 2: B√∫squeda Directa por Tel√©fono")
    print("=" * 60)
    
    telefono_david = "5216621327315"
    nombre_nora = "aura"
    
    print(f"üîç B√∫squeda directa: {telefono_david}")
    usuario = buscar_usuario_por_telefono(telefono_david, nombre_nora)
    
    if usuario:
        print(f"‚úÖ Usuario encontrado:")
        print(f"   üë§ Nombre: {usuario.get('nombre', 'Sin nombre')}")
        print(f"   üìß Email: {usuario.get('correo', 'Sin email')}")
        print(f"   üè∑Ô∏è Rol: {usuario.get('rol', 'Sin rol')}")
        print(f"   üìû Tel√©fono: {usuario.get('telefono', 'Sin tel√©fono')}")
        print(f"   ü§ñ Nora: {usuario.get('nombre_nora', 'Sin asignar')}")
        return True
    else:
        print("‚ùå Usuario no encontrado")
        return False

def test_flujo_whatsapp_completo():
    """Test 3: Simular flujo completo de WhatsApp"""
    print("\n" + "=" * 60)
    print("üß™ TEST 3: Flujo Completo WhatsApp")
    print("=" * 60)
    
    # Simular datos de WhatsApp de David
    datos_whatsapp = {
        "From": "whatsapp:+5216621327315",  # N√∫mero de David
        "To": "whatsapp:+5215593372311",    # N√∫mero de Nora
        "Body": "Hola, necesito revisar las tareas pendientes",
        "ProfileName": "David Test"
    }
    
    print(f"üì± Simulando mensaje de WhatsApp:")
    print(f"   üë§ De: {datos_whatsapp['From']}")
    print(f"   ü§ñ Para: {datos_whatsapp['To']}")
    print(f"   üí¨ Mensaje: {datos_whatsapp['Body']}")
    
    try:
        from clientes.aura.handlers.process_message import procesar_mensaje
        
        # Procesar el mensaje (esto deber√≠a identificar a David como usuario interno)
        print(f"\nüîÑ Procesando mensaje...")
        respuesta = procesar_mensaje(datos_whatsapp)
        
        print(f"‚úÖ Mensaje procesado exitosamente")
        print(f"üìù Respuesta: {respuesta[:100]}..." if respuesta else "Sin respuesta")
        
        return True
    except Exception as e:
        print(f"‚ùå Error en flujo completo: {e}")
        import traceback
        traceback.print_exc()
        return False

def ejecutar_tests_telefono():
    """Ejecutar todos los tests de identificaci√≥n por tel√©fono"""
    print("üöÄ INICIANDO TESTS DE IDENTIFICACI√ìN POR TEL√âFONO")
    print("=" * 80)
    
    tests_pasados = 0
    total_tests = 3
    
    # Test 1: Identificaci√≥n por tel√©fono
    if test_identificacion_por_telefono():
        tests_pasados += 1
    
    # Test 2: B√∫squeda directa
    if test_busqueda_directa():
        tests_pasados += 1
    
    # Test 3: Flujo completo WhatsApp
    if test_flujo_whatsapp_completo():
        tests_pasados += 1
    
    # Resumen final
    print("\n" + "=" * 80)
    print("üìä RESUMEN DE TESTS DE IDENTIFICACI√ìN POR TEL√âFONO")
    print("=" * 80)
    print(f"‚úÖ Tests pasados: {tests_pasados}/{total_tests}")
    
    if tests_pasados == total_tests:
        print("üéâ ¬°TODOS LOS TESTS PASARON!")
        print("üìû La identificaci√≥n por tel√©fono funciona correctamente:")
        print("   - B√∫squeda en usuarios_clientes ‚úÖ")
        print("   - Identificaci√≥n de usuarios internos ‚úÖ")
        print("   - Flujo completo de WhatsApp ‚úÖ")
        print("   - Prioridad: usuarios_clientes > clientes ‚úÖ")
    else:
        print(f"‚ö†Ô∏è {total_tests - tests_pasados} tests fallaron. Revisa la configuraci√≥n.")
    
    print("=" * 80)

if __name__ == "__main__":
    ejecutar_tests_telefono()
