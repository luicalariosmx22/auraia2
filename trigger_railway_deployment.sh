#!/bin/bash

# Script para triggerar nuevo deployment en Railway
echo "=== TRIGGERING NUEVO DEPLOYMENT EN RAILWAY ==="
echo "Fecha: $(date)"
echo ""

# Verificar que estamos en el directorio correcto
PROJECT_DIR="/mnt/c/Users/PC/PYTHON/Auraai2"
cd "$PROJECT_DIR"

echo "üìÅ Directorio del proyecto: $PROJECT_DIR"
echo ""

# Verificar estado del repositorio
echo "üîç VERIFICANDO ESTADO DEL REPOSITORIO:"
echo "-----------------------------------"

# Verificar que no hay cambios sin commit
STATUS=$(git status --porcelain)
if [ -n "$STATUS" ]; then
    echo "‚ö†Ô∏è  Hay cambios sin commit:"
    echo "$STATUS"
    echo ""
    echo "üîß A√±adiendo cambios al commit..."
    git add .
    git commit -m "Update Railway deployment configuration - $(date)"
else
    echo "‚úÖ No hay cambios pendientes"
fi

echo ""
echo "üöÄ TRIGGERING DEPLOYMENT:"
echo "-----------------------------------"

# Hacer un commit vac√≠o para triggerar el deployment
echo "üìù Creando commit vac√≠o para triggerar rebuild..."
git commit --allow-empty -m "Trigger Railway rebuild - $(date)"

if [ $? -eq 0 ]; then
    echo "‚úÖ Commit vac√≠o creado exitosamente"
else
    echo "‚ùå Error al crear commit vac√≠o"
    exit 1
fi

echo ""
echo "üì§ PUSHING A GITHUB:"
echo "-----------------------------------"

# Push a GitHub
echo "üì§ Enviando cambios a GitHub..."
git push origin main

if [ $? -eq 0 ]; then
    echo "‚úÖ Push exitoso a GitHub"
    echo "üéâ Railway deber√≠a detectar el cambio y iniciar un nuevo deployment"
else
    echo "‚ùå Error al hacer push"
    echo "‚ö†Ô∏è  Verifica tu conexi√≥n a internet y credenciales de GitHub"
    exit 1
fi

echo ""
echo "‚è≥ ESPERANDO DEPLOYMENT:"
echo "-----------------------------------"
echo "El deployment puede tardar 2-5 minutos."
echo "Mientras tanto, puedes:"
echo ""
echo "1. üì± Abrir Railway Dashboard:"
echo "   https://railway.app/dashboard"
echo ""
echo "2. üîç Buscar tu proyecto (probablemente llamado 'auraia2')"
echo ""
echo "3. üìã Ir a la pesta√±a 'Deployments' para ver el progreso"
echo ""
echo "4. üìù Revisar los logs en tiempo real"
echo ""

echo "üïê Esperando 30 segundos antes de verificar..."
sleep 30

echo ""
echo "üîç VERIFICANDO DEPLOYMENT:"
echo "-----------------------------------"

# Intentar encontrar la URL correcta
echo "üåê Buscando la URL correcta del proyecto..."

# URLs posibles basadas en el nombre del repo
POSSIBLE_URLS=(
    "https://auraia2-production.up.railway.app"
    "https://auraia2-production-$(date +%s | tail -c 5).up.railway.app"
    "https://luicalariosmx22-auraia2-production.up.railway.app"
)

for URL in "${POSSIBLE_URLS[@]}"; do
    echo "üîç Probando: $URL"
    
    RESPONSE=$(curl -s -w "%{http_code}" --connect-timeout 5 --max-time 10 "$URL/health" 2>/dev/null)
    HTTP_CODE="${RESPONSE: -3}"
    
    if [ "$HTTP_CODE" = "200" ]; then
        echo "üéâ ¬°PROYECTO ENCONTRADO Y FUNCIONANDO!"
        echo "‚úÖ URL exitosa: $URL"
        echo "‚úÖ Status: $HTTP_CODE"
        
        # Probar endpoint QR
        echo "üîç Probando endpoint QR..."
        QR_RESPONSE=$(curl -s -w "%{http_code}" --connect-timeout 5 --max-time 10 "$URL/qr" 2>/dev/null)
        QR_HTTP_CODE="${QR_RESPONSE: -3}"
        
        if [ "$QR_HTTP_CODE" = "200" ]; then
            echo "‚úÖ Endpoint QR funcionando"
        else
            echo "‚ö†Ô∏è  Endpoint QR: $QR_HTTP_CODE"
        fi
        
        break
    elif [ "$HTTP_CODE" = "404" ]; then
        echo "‚ùå 404 - Proyecto no encontrado en esta URL"
    else
        echo "‚ö†Ô∏è  Respuesta inesperada: $HTTP_CODE"
    fi
done

echo ""
echo "üìã PR√ìXIMOS PASOS:"
echo "-----------------------------------"
echo ""
echo "1. üñ•Ô∏è  VE AL RAILWAY DASHBOARD:"
echo "   https://railway.app/dashboard"
echo ""
echo "2. üîç BUSCA TU PROYECTO:"
echo "   - Busca 'auraia2' en la lista de proyectos"
echo "   - Verifica que est√© conectado a tu repositorio GitHub"
echo ""
echo "3. üìã REVISA EL DEPLOYMENT:"
echo "   - Ve a la pesta√±a 'Deployments'"
echo "   - Verifica el estado del √∫ltimo deployment"
echo "   - Revisa los logs si hay errores"
echo ""
echo "4. üåê OBT√âN LA URL CORRECTA:"
echo "   - Ve a Settings ‚Üí Domains"
echo "   - Copia la URL asignada por Railway"
echo ""
echo "5. üß™ PRUEBA LA URL:"
echo "   - Usa la URL correcta para probar /health y /qr"
echo ""

echo "üí° TIPS:"
echo "-----------------------------------"
echo "- Si el deployment falla, revisa los logs en Railway"
echo "- Aseg√∫rate de que Chrome se instale correctamente"
echo "- Verifica que no haya errores de dependencias"
echo "- El deployment puede tardar hasta 5 minutos"
echo ""
echo "üéØ OBJETIVO:"
echo "Una vez que el deployment est√© listo, deber√≠as ver:"
echo "- /health devuelve {\"status\": \"ok\"}"
echo "- /qr devuelve un QR c√≥digo v√°lido"
echo "- El QR se muestra correctamente en el panel de NORA"
