#!/usr/bin/env python3
"""
Test r√°pido para verificar la extracci√≥n mejorada de entidades en consultas de tareas
"""

import re
from typing import Optional, Dict

def limpiar_entidad(entidad: str) -> str:
    """Limpia la entidad extra√≠da de palabras innecesarias"""
    # Remover palabras comunes al final
    palabras_remover = [
        "que", "tiene", "hay", "son", "est√°n", "activas", "pendientes",
        "completadas", "urgentes", "vencidas", "empresa", "la empresa"
    ]
    
    entidad_limpia = entidad
    for palabra in palabras_remover:
        # Remover al final
        if entidad_limpia.endswith(" " + palabra):
            entidad_limpia = entidad_limpia[:-len(" " + palabra)]
        # Remover al inicio
        if entidad_limpia.startswith(palabra + " "):
            entidad_limpia = entidad_limpia[len(palabra + " "):]
    
    return entidad_limpia.strip()

def detectar_consulta_tareas_mejorado(mensaje: str) -> Optional[Dict]:
    """
    Versi√≥n mejorada de detecci√≥n de consultas de tareas
    """
    mensaje_lower = mensaje.lower().strip()
    
    # Patrones mejorados para mejor extracci√≥n de entidades
    patrones_tareas = [
        # Patrones espec√≠ficos para empresas
        r"tareas?\s+de\s+(?:la\s+)?empresa\s+([a-zA-Z√°√©√≠√≥√∫√±√Å√â√ç√ì√ö√ë\s]+?)(?:\s+que|\?|$)",
        r"tareas?\s+de\s+([a-zA-Z√°√©√≠√≥√∫√±√Å√â√ç√ì√ö√ë\s]+?)\s+(?:empresa|compa√±√≠a)",
        r"tareas?\s+(?:activas?\s+)?(?:hay\s+)?(?:en\s+)?([a-zA-Z√°√©√≠√≥√∫√±√Å√â√ç√ì√ö√ë\s]+?)\s+(?:la\s+)?empresa",
        
        # Patrones espec√≠ficos para usuarios
        r"tareas?\s+de\s+([a-zA-Z√°√©√≠√≥√∫√±√Å√â√ç√ì√ö√ë\s]+?)(?:\s+que|\s+tiene|\?|$)",
        r"qu√©\s+tareas?\s+tiene\s+([a-zA-Z√°√©√≠√≥√∫√±√Å√â√ç√ì√ö√ë\s]+?)(?:\?|$)",
        r"cu√°les?\s+son\s+las\s+tareas?\s+de\s+([a-zA-Z√°√©√≠√≥√∫√±√Å√â√ç√ì√ö√ë\s]+?)(?:\?|$)",
        r"mostrar\s+tareas?\s+(?:de\s+)?([a-zA-Z√°√©√≠√≥√∫√±√Å√â√ç√ì√ö√ë\s]+?)(?:\?|$)",
        r"ver\s+tareas?\s+(?:de\s+)?([a-zA-Z√°√©√≠√≥√∫√±√Å√â√ç√ì√ö√ë\s]+?)(?:\?|$)",
        
        # Patrones con filtros integrados
        r"tareas?\s+(pendientes?|completadas?|urgentes?|en\s+proceso)\s+de\s+([a-zA-Z√°√©√≠√≥√∫√±√Å√â√ç√ì√ö√ë\s]+?)(?:\?|$)",
        r"(?:tiene|hay)\s+tareas?\s+(?:activas?\s+)?(?:en\s+)?([a-zA-Z√°√©√≠√≥√∫√±√Å√â√ç√ì√ö√ë\s]+?)(?:\?|$)",
        
        # Patrones para empresas con S.A., Corp, etc.
        r"tareas?\s+de\s+([a-zA-Z√°√©√≠√≥√∫√±√Å√â√ç√ì√ö√ë\s]+)\s+(?:s\.a\.|inc|corp|ltd)\.?",
        
        # Patr√≥n gen√©rico (m√°s restrictivo)
        r"tareas?\s+([a-zA-Z√°√©√≠√≥√∫√±√Å√â√ç√ì√ö√ë\s]{2,30})(?:\?|$)"
    ]
    
    for patron in patrones_tareas:
        match = re.search(patron, mensaje_lower)
        if match:
            # Extraer entidad y limpiarla
            if len(match.groups()) == 2:  # Patr√≥n con filtro
                filtro_extra = match.group(1)
                entidad = match.group(2).strip()
            else:
                entidad = match.group(1).strip()
            
            # Limpiar la entidad de palabras innecesarias
            entidad = limpiar_entidad(entidad)
            
            return {
                "es_consulta_tareas": True,
                "entidad": entidad,
                "patron_usado": patron
            }
    
    return None

def test_extraccion_entidades():
    """Test de extracci√≥n de entidades mejorado"""
    print("üß™ TEST: EXTRACCI√ìN MEJORADA DE ENTIDADES")
    print("=" * 50)
    
    # Casos de test problem√°ticos
    consultas_test = [
        "tareas activas hay en suspiros pastelerias la empresa",
        "tareas de la empresa Suspiros Pasteler√≠as",
        "¬øQu√© tareas tiene Juan P√©rez?",
        "Tareas pendientes de Mar√≠a Garc√≠a",
        "Ver tareas de TechCorp empresa",
        "Mostrar tareas de Innovation Corp",
        "¬øHay tareas activas en Digital Solutions?",
        "Tareas urgentes de Luis Rodriguez",
        "Consultar tareas de la empresa ABC S.A."
    ]
    
    for i, consulta in enumerate(consultas_test, 1):
        print(f"\nüìù Test {i}: '{consulta}'")
        
        resultado = detectar_consulta_tareas_mejorado(consulta)
        
        if resultado:
            print(f"   ‚úÖ DETECTADA")
            print(f"   üìä Entidad extra√≠da: '{resultado['entidad']}'")
            print(f"   üîß Patr√≥n usado: {resultado['patron_usado']}")
        else:
            print(f"   ‚ùå NO DETECTADA")
    
    print(f"\n" + "=" * 50)
    print("üéØ COMPARACI√ìN CON CASO PROBLEM√ÅTICO:")
    
    caso_problema = "tareas activas hay en suspiros pastelerias la empresa"
    print(f"   Consulta original: '{caso_problema}'")
    
    resultado = detectar_consulta_tareas_mejorado(caso_problema)
    if resultado:
        print(f"   ‚úÖ Entidad corregida: '{resultado['entidad']}'")
        print(f"   üìà Mejora: Extrae 'suspiros pastelerias' en lugar de texto completo")
    else:
        print(f"   ‚ùå A√∫n no detectada")

if __name__ == "__main__":
    test_extraccion_entidades()
